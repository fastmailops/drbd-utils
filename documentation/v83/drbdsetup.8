'\" t
.\"     Title: drbdsetup
.\"    Author: [see the "Author" section]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 5 Dec 2008
.\"    Manual: System Administration
.\"    Source: DRBD 8.3.2
.\"  Language: English
.\"
.TH "DRBDSETUP" "8" "5 Dec 2008" "DRBD 8.3.2" "System Administration"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
drbdsetup \- Setup tool for DRBD .\" drbdsetup
.SH "SYNOPSIS"
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} disk {\fIlower_dev\fR} {\fImeta_data_dev\fR} {\fImeta_data_index\fR} [\-d\ {\fIsize\fR}] [\-e\ {\fIerr_handler\fR}] [\-f\ {\fIfencing_policy\fR}] [\-b] [\-t\ {\fIdisk_timeout\fR}]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} net [\fIaf:\fR] {\fIlocal_addr\fR} [\fI:port\fR] [\fIaf:\fR] {\fIremote_addr\fR} [\fI:port\fR] {\fIprotocol\fR} [\-c\ {\fItime\fR}] [\-i\ {\fItime\fR}] [\-t\ {\fIval\fR}] [\-S\ {\fIsize\fR}] [\-r\ {\fIsize\fR}] [\-k\ {\fIcount\fR}] [\-e\ {\fImax_epoch_size\fR}] [\-b\ {\fImax_buffers\fR}] [\-m] [\-a\ {\fIhash_alg\fR}] [\-x\ {\fIshared_secret\fR}] [\-A\ {\fIasb\-0p\-policy\fR}] [\-B\ {\fIasb\-1p\-policy\fR}] [\-C\ {\fIasb\-2p\-policy\fR}] [\-D] [\-R\ {\fIrole\-resync\-conflict\-policy\fR}] [\-p\ {\fIping_timeout\fR}] [\-u\ {\fIval\fR}] [\-d\ {\fIhash_alg\fR}] [\-o] [\-n] [\-g\ {\fIcongestion_policy\fR}] [\-f\ {\fIval\fR}] [\-h\ {\fIval\fR}]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} syncer [\-a\ {\fIdev_minor\fR}] [\-r\ {\fIrate\fR}] [\-e\ {\fIextents\fR}] [\-v\ {\fIverify\-hash\-alg\fR}] [\-c\ {\fIcpu\-mask\fR}] [\-C\ {\fIcsums\-hash\-alg\fR}] [\-R] [\-p\ {\fIplan_time\fR}] [\-s\ {\fIfill_target\fR}] [\-d\ {\fIdelay_target\fR}] [\-m\ {\fImax_rate\fR}] [\-n\ {\fIond\-policy\fR}]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} disconnect
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} detach [\-f]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} down
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} primary [\-f] [\-o]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} secondary
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} verify [\-s\ {\fIstart\-position\fR}] [\-S\ {\fIstop\-position\fR}]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} invalidate
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} invalidate\-remote
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} wait\-connect [\-t\ {\fIwfc_timeout\fR}] [\-d\ {\fIdegr_wfc_timeout\fR}] [\-o\ {\fIoutdated_wfc_timeout\fR}] [\-w]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} wait\-sync [\-t\ {\fIwfc_timeout\fR}] [\-d\ {\fIdegr_wfc_timeout\fR}] [\-o\ {\fIoutdated_wfc_timeout\fR}] [\-w]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} role
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} cstate
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} dstate
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} status
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} resize [\-d\ {\fIsize\fR}] [\-f\ {\fIassume\-peer\-has\-space\fR}] [\-c\ {\fIassume\-clean\fR}]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} check\-resize
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} pause\-sync
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} resume\-sync
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} outdate
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} show\-gi
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} get\-gi
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} show
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} suspend\-io
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} resume\-io
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} events [\-u] [\-a]
.HP \w'\fBdrbdsetup\fR\ 'u
\fBdrbdsetup\fR {\fIdevice\fR} new\-current\-uuid [\-c]
.SH "DESCRIPTION"
.PP
drbdsetup is used to associate DRBD devices with their backing block devices, to set up DRBD device pairs to mirror their backing block devices, and to inspect the configuration of running DRBD devices\&.
.SH "NOTE"
.PP
drbdsetup is a low level tool of the DRBD program suite\&. It is used by the data disk and drbd scripts to communicate with the device driver\&.
.SH "COMMANDS"
.PP
Each drbdsetup sub\-command might require arguments and bring its own set of options\&. All values have default units which might be overruled by K, M or G\&. These units are defined in the usual way (e\&.g\&. K = 2^10 = 1024)\&.
.SS "Common options"
.PP
All drbdsetup sub\-commands accept these two options
.PP
\fB\-\-create\-device\fR
.RS 4
In case the specified DRBD device (minor number) does not exist yet, create it implicitly\&.
.RE
.PP
\fB\-\-set\-defaults\fR
.RS 4
When
\fB\-\-set\-defaults\fR
is given on the command line, all options of the invoked sub\-command that are not explicitly set are reset to their default values\&.
.RE
.SS "disk"
.\" drbdsetup: disk
.PP
Associates
\fIdevice\fR
with
\fIlower_device\fR
to store its data blocks on\&. The
\fB\-d\fR
(or
\fB\-\-disk\-size\fR) should only be used if you wish not to use as much as possible from the backing block devices\&. If you do not use
\fB\-d\fR, the
\fIdevice\fR
is only ready for use as soon as it was connected to its peer once\&. (See the
\fBnet\fR
command\&.)
.PP
\fB\-d\fR, \fB\-\-disk\-size \fR\fB\fIsize\fR\fR
.RS 4
You can override DRBD\'s size determination method with this option\&. If you need to use the device before it was ever connected to its peer, use this option to pass the
\fIsize\fR
of the DRBD device to the driver\&. Default unit is sectors (1s = 512 bytes)\&.
.sp
If you use the
\fIsize\fR
parameter in drbd\&.conf, we strongly recommend to add an explicit unit postfix\&. drbdadm and drbdsetup used to have mismatching default units\&.
.RE
.PP
\fB\-e\fR, \fB\-\-on\-io\-error \fR\fB\fIerr_handler\fR\fR
.RS 4
If the driver of the
\fIlower_device\fR
reports an error to DRBD, DRBD will mark the disk as inconsistent, call a helper program, or detach the device from its backing storage and perform all further IO by requesting it from the peer\&. The valid
\fIerr_handlers\fR
are:
\fBpass_on\fR,
\fBcall\-local\-io\-error\fR
and
\fBdetach\fR\&.
.RE
.PP
\fB\-f\fR, \fB\-\-fencing \fR\fB\fIfencing_policy\fR\fR
.RS 4
Under
\fBfencing\fR
we understand preventive measures to avoid situations where both nodes are primary and disconnected (AKA split brain)\&.
.sp
Valid fencing policies are:
.PP
\fBdont\-care\fR
.RS 4
This is the default policy\&. No fencing actions are done\&.
.RE
.PP
\fBresource\-only\fR
.RS 4
If a node becomes a disconnected primary, it tries to outdate the peer\'s disk\&. This is done by calling the fence\-peer handler\&. The handler is supposed to reach the other node over alternative communication paths and call \'drbdadm outdate res\' there\&.
.RE
.PP
\fBresource\-and\-stonith\fR
.RS 4
If a node becomes a disconnected primary, it freezes all its IO operations and calls its fence\-peer handler\&. The fence\-peer handler is supposed to reach the peer over alternative communication paths and call \'drbdadm outdate res\' there\&. In case it cannot reach the peer, it should stonith the peer\&. IO is resumed as soon as the situation is resolved\&. In case your handler fails, you can resume IO with the
\fBresume\-io\fR
command\&.
.RE
.RE
.PP
\fB\-b\fR, \fB\-\-use\-bmbv\fR
.RS 4
In case the backing storage\'s driver has a merge_bvec_fn() function, DRBD has to pretend that it can only process IO requests in units not larger than 4 KiB\&. (At time of writing the only known drivers which have such a function are: md (software raid driver), dm (device mapper \- LVM) and DRBD itself)
.sp
To get best performance out of DRBD on top of software raid (or any other driver with a merge_bvec_fn() function) you might enable this option, if you know for sure that the merge_bvec_fn() function will deliver the same results on all nodes of your cluster\&. I\&.e\&. the physical disks of the software raid are exactly of the same type\&. USE THIS OPTION ONLY IF YOU KNOW WHAT YOU ARE DOING\&.
.RE
.PP
\fB\-a\fR, \fB\-\-no\-disk\-barrier\fR, \fB\-i\fR, \fB\-\-no\-disk\-flushes\fR, \fB\-D\fR, \fB\-\-no\-disk\-drain\fR
.RS 4
DRBD has four implementations to express write\-after\-write dependencies to its backing storage device\&. DRBD will use the first method that is supported by the backing storage device and that is not disabled by the user\&.
.sp
When selecting the method you should not only base your decision on the measurable performance\&. In case your backing storage device has a volatile write cache (plain disks, RAID of plain disks) you should use one of the first two\&. In case your backing storage device has battery\-backed write cache you may go with option 3\&. Option 4 (disable everything, use "none")
\fIis dangerous\fR
on most IO stacks, may result in write\-reordering, and if so, can theoretically be the reason for data corruption, or disturb the DRBD protocol, causing spurious disconnect/reconnect cycles\&.
\fIDo not use\fR
\fBno\-disk\-drain\fR\&.
.sp
Unfortunately device mapper (LVM) might not support barriers\&.
.sp
The letter after "wo:" in /proc/drbd indicates with method is currently in use for a device: b, f, d, n\&. The implementations:
.PP
barrier
.RS 4
The first requires that the driver of the backing storage device support barriers (called \'tagged command queuing\' in SCSI and \'native command queuing\' in SATA speak)\&. The use of this method can be disabled by the
\fB\-\-no\-disk\-barrier\fR
option\&. Note: Since Linux\-2\&.6\&.36 (or RHEL\'s 2\&.6\&.32) this method is disabled\&.
.RE
.PP
flush
.RS 4
The second requires that the backing device support disk flushes (called \'force unit access\' in the drive vendors speak)\&. The use of this method can be disabled using the
\fB\-\-no\-disk\-flushes\fR
option\&.
.RE
.PP
drain
.RS 4
The third method is simply to let write requests drain before write requests of a new reordering domain are issued\&. That was the only implementation before 8\&.0\&.9\&.
.RE
.PP
none
.RS 4
The fourth method is to not express write\-after\-write dependencies to the backing store at all, by also specifying
\fB\-\-no\-disk\-drain\fR\&. This
\fIis dangerous\fR
on most IO stacks, may result in write\-reordering, and if so, can theoretically be the reason for data corruption, or disturb the DRBD protocol, causing spurious disconnect/reconnect cycles\&.
\fIDo not use\fR
\fB\-\-no\-disk\-drain\fR\&.
.RE
.RE
.PP
\fB\-m\fR, \fB\-\-no\-md\-flushes\fR
.RS 4
Disables the use of disk flushes and barrier BIOs when accessing the meta data device\&. See the notes on
\fB\-\-no\-disk\-flushes\fR\&.
.RE
.PP
\fB\-s\fR, \fB\-\-max\-bio\-bvecs\fR
.RS 4
In some special circumstances the device mapper stack manages to pass BIOs to DRBD that violate the constraints that are set forth by DRBD\'s merge_bvec() function and which have more than one bvec\&. A known example is: phys\-disk \-> DRBD \-> LVM \-> Xen \-> missaligned partition (63) \-> DomU FS\&. Then you might see "bio would need to, but cannot, be split:" in the Dom0\'s kernel log\&.
.sp
The best workaround is to proper align the partition within the VM (E\&.g\&. start it at sector 1024)\&. That costs 480 KiB of storage\&. Unfortunately the default of most Linux partitioning tools is to start the first partition at an odd number (63)\&. Therefore most distributions install helpers for virtual linux machines will end up with missaligned partitions\&. The second best workaround is to limit DRBD\'s max bvecs per BIO (i\&.e\&., the
\fBmax\-bio\-bvecs\fR
option) to 1, but that might cost performance\&.
.sp
The default value of
\fBmax\-bio\-bvecs\fR
is 0, which means that there is no user imposed limitation\&.
.RE
.PP
\fB\-t\fR, \fB\-\-disk\-timeout \fR\fB\fIdisk_timeout\fR\fR
.RS 4
If the driver of the
\fIlower_device\fR
does not finish an IO request within
\fIdisk_timeout\fR, DRBD considers the disk as failed\&. If DRBD is connected to a remote host, it will reissue local pending IO requests to the peer, and ship all new IO requests to the peer only\&. The disk state advances to diskless, as soon as the backing block device has finished all IO requests\&.
.sp
The default value of is 0, which means that no timeout is enforced\&. The default unit is 100ms\&. This option is available since 8\&.3\&.12\&.
.RE
.SS "net"
.\" drbdsetup: net
.PP
Sets up the
\fIdevice\fR
to listen on
\fIaf:local_addr:port\fR
for incoming connections and to try to connect to
\fIaf:remote_addr:port\fR\&. If
\fIport\fR
is omitted, 7788 is used as default\&. If
\fIaf\fR
is omitted
\fBipv4\fR
gets used\&. Other supported address families are
\fBipv6\fR,
\fBssocks\fR
for Dolphin Interconnect Solutions\' "super sockets" and
\fBsdp\fR
for Sockets Direct Protocol (Infiniband)\&.
.PP
On the TCP/IP link the specified
\fIprotocol\fR
is used\&. Valid protocol specifiers are A, B, and C\&.
.PP
Protocol A: write IO is reported as completed, if it has reached local disk and local TCP send buffer\&.
.PP
Protocol B: write IO is reported as completed, if it has reached local disk and remote buffer cache\&.
.PP
Protocol C: write IO is reported as completed, if it has reached both local and remote disk\&.
.PP
\fB\-c\fR, \fB\-\-connect\-int \fR\fB\fItime\fR\fR
.RS 4
In case it is not possible to connect to the remote DRBD device immediately, DRBD keeps on trying to connect\&. With this option you can set the time between two retries\&. The default value is 10 seconds, the unit is 1 second\&.
.RE
.PP
\fB\-i\fR, \fB\-\-ping\-int \fR\fB\fItime\fR\fR
.RS 4
If the TCP/IP connection linking a DRBD device pair is idle for more than
\fItime\fR
seconds, DRBD will generate a keep\-alive packet to check if its partner is still alive\&. The default value is 10 seconds, the unit is 1 second\&.
.RE
.PP
\fB\-t\fR, \fB\-\-timeout \fR\fB\fIval\fR\fR
.RS 4
If the partner node fails to send an expected response packet within
\fIval\fR
tenths of a second, the partner node is considered dead and therefore the TCP/IP connection is abandoned\&. The default value is 60 (= 6 seconds)\&.
.RE
.PP
\fB\-S\fR, \fB\-\-sndbuf\-size \fR\fB\fIsize\fR\fR
.RS 4
The socket send buffer is used to store packets sent to the secondary node, which are not yet acknowledged (from a network point of view) by the secondary node\&. When using protocol A, it might be necessary to increase the size of this data structure in order to increase asynchronicity between primary and secondary nodes\&. But keep in mind that more asynchronicity is synonymous with more data loss in the case of a primary node failure\&. Since 8\&.0\&.13 resp\&. 8\&.2\&.7 setting the
\fIsize\fR
value to 0 means that the kernel should autotune this\&. The default
\fIsize\fR
is 0, i\&.e\&. autotune\&.
.RE
.PP
\fB\-r\fR, \fB\-\-rcvbuf\-size \fR\fB\fIsize\fR\fR
.RS 4
Packets received from the network are stored in the socket receive buffer first\&. From there they are consumed by DRBD\&. Before 8\&.3\&.2 the receive buffer\'s size was always set to the size of the socket send buffer\&. Since 8\&.3\&.2 they can be tuned independently\&. A value of 0 means that the kernel should autotune this\&. The default
\fIsize\fR
is 0, i\&.e\&. autotune\&.
.RE
.PP
\fB\-k\fR, \fB\-\-ko\-count \fR\fB\fIcount\fR\fR
.RS 4
In case the secondary node fails to complete a single write request for
\fIcount\fR
times the
\fItimeout\fR, it is expelled from the cluster, i\&.e\&. the primary node goes into StandAlone mode\&. To disable this feature, you should explicitly set it to 0; defaults may change between versions\&.
.RE
.PP
\fB\-e\fR, \fB\-\-max\-epoch\-size \fR\fB\fIval\fR\fR
.RS 4
With this option the maximal number of write requests between two barriers is limited\&. Typically set to the same as
\fB\-\-max\-buffers\fR, or the allowed maximum\&. Values smaller than 10 can lead to degraded performance\&. The default value is 2048\&.
.RE
.PP
\fB\-b\fR, \fB\-\-max\-buffers \fR\fB\fIval\fR\fR
.RS 4
With this option the maximal number of buffer pages allocated by DRBD\'s receiver thread is limited\&. Typically set to the same as
\fB\-\-max\-epoch\-size\fR\&. Small values could lead to degraded performance\&. The default value is 2048, the minimum 32\&. Increase this if you cannot saturate the IO backend of the receiving side during linear write or during resync while otherwise idle\&.
.sp
See also
\fBdrbd.conf\fR(5)
.RE
.PP
\fB\-u\fR, \fB\-\-unplug\-watermark \fR\fB\fIval\fR\fR
.RS 4
This setting has no effect with recent kernels that use explicit on\-stack plugging (upstream Linux kernel 2\&.6\&.39, distributions may have backported)\&.
.sp
When the number of pending write requests on the standby (secondary) node exceeds the unplug\-watermark, we trigger the request processing of our backing storage device\&. Some storage controllers deliver better performance with small values, others deliver best performance when the value is set to the same value as max\-buffers, yet others don\'t feel much effect at all\&. Minimum 16, default 128, maximum 131072\&.
.RE
.PP
\fB\-m\fR, \fB\-\-allow\-two\-primaries \fR
.RS 4
With this option set you may assign primary role to both nodes\&. You only should use this option if you use a shared storage file system on top of DRBD\&. At the time of writing the only ones are: OCFS2 and GFS\&. If you use this option with any other file system, you are going to crash your nodes and to corrupt your data!
.RE
.PP
\fB\-a\fR, \fB\-\-cram\-hmac\-alg \fR\fIalg\fR
.RS 4
You need to specify the HMAC algorithm to enable peer authentication at all\&. You are strongly encouraged to use peer authentication\&. The HMAC algorithm will be used for the challenge response authentication of the peer\&. You may specify any digest algorithm that is named in /proc/crypto\&.
.RE
.PP
\fB\-x\fR, \fB\-\-shared\-secret \fR\fIsecret\fR
.RS 4
The shared secret used in peer authentication\&. May be up to 64 characters\&.
.RE
.PP
\fB\-A\fR, \fB\-\-after\-sb\-0pri \fR\fIasb\-0p\-policy\fR
.RS 4
possible policies are:
.PP
\fBdisconnect\fR
.RS 4
No automatic resynchronization, simply disconnect\&.
.RE
.PP
\fBdiscard\-younger\-primary\fR
.RS 4
Auto sync from the node that was primary before the split\-brain situation occurred\&.
.RE
.PP
\fBdiscard\-older\-primary\fR
.RS 4
Auto sync from the node that became primary as second during the split\-brain situation\&.
.RE
.PP
\fBdiscard\-zero\-changes\fR
.RS 4
In case one node did not write anything since the split brain became evident, sync from the node that wrote something to the node that did not write anything\&. In case none wrote anything this policy uses a random decision to perform a "resync" of 0 blocks\&. In case both have written something this policy disconnects the nodes\&.
.RE
.PP
\fBdiscard\-least\-changes\fR
.RS 4
Auto sync from the node that touched more blocks during the split brain situation\&.
.RE
.PP
\fBdiscard\-node\-NODENAME\fR
.RS 4
Auto sync to the named node\&.
.RE
.RE
.PP
\fB\-B\fR, \fB\-\-after\-sb\-1pri \fR\fIasb\-1p\-policy\fR
.RS 4
possible policies are:
.PP
\fBdisconnect\fR
.RS 4
No automatic resynchronization, simply disconnect\&.
.RE
.PP
\fBconsensus\fR
.RS 4
Discard the version of the secondary if the outcome of the
\fBafter\-sb\-0pri\fR
algorithm would also destroy the current secondary\'s data\&. Otherwise disconnect\&.
.RE
.PP
\fBdiscard\-secondary\fR
.RS 4
Discard the secondary\'s version\&.
.RE
.PP
\fBcall\-pri\-lost\-after\-sb\fR
.RS 4
Always honor the outcome of the
\fBafter\-sb\-0pri \fR
algorithm\&. In case it decides the current secondary has the correct data, call the
\fBpri\-lost\-after\-sb\fR
on the current primary\&.
.RE
.PP
\fBviolently\-as0p\fR
.RS 4
Always honor the outcome of the
\fBafter\-sb\-0pri \fR
algorithm\&. In case it decides the current secondary has the correct data, accept a possible instantaneous change of the primary\'s data\&.
.RE
.RE
.PP
\fB\-C\fR, \fB\-\-after\-sb\-2pri \fR\fIasb\-2p\-policy\fR
.RS 4
possible policies are:
.PP
\fBdisconnect\fR
.RS 4
No automatic resynchronization, simply disconnect\&.
.RE
.PP
\fBcall\-pri\-lost\-after\-sb\fR
.RS 4
Always honor the outcome of the
\fBafter\-sb\-0pri \fR
algorithm\&. In case it decides the current secondary has the right data, call the
\fBpri\-lost\-after\-sb\fR
on the current primary\&.
.RE
.PP
\fBviolently\-as0p\fR
.RS 4
Always honor the outcome of the
\fBafter\-sb\-0pri \fR
algorithm\&. In case it decides the current secondary has the right data, accept a possible instantaneous change of the primary\'s data\&.
.RE
.RE
.PP
\fB\-P\fR, \fB\-\-always\-asbp\fR
.RS 4
Normally the automatic after\-split\-brain policies are only used if current states of the UUIDs do not indicate the presence of a third node\&.
.sp
With this option you request that the automatic after\-split\-brain policies are used as long as the data sets of the nodes are somehow related\&. This might cause a full sync, if the UUIDs indicate the presence of a third node\&. (Or double faults have led to strange UUID sets\&.)
.RE
.PP
\fB\-R\fR, \fB\-\-rr\-conflict \fR\fIrole\-resync\-conflict\-policy\fR
.RS 4
This option sets DRBD\'s behavior when DRBD deduces from its meta data that a resynchronization is needed, and the SyncTarget node is already primary\&. The possible settings are:
\fBdisconnect\fR,
\fBcall\-pri\-lost\fR
and
\fBviolently\fR\&. While
\fBdisconnect\fR
speaks for itself, with the
\fBcall\-pri\-lost\fR
setting the
\fBpri\-lost\fR
handler is called which is expected to either change the role of the node to secondary, or remove the node from the cluster\&. The default is
\fBdisconnect\fR\&.
.sp
With the
\fBviolently\fR
setting you allow DRBD to force a primary node into SyncTarget state\&. This means that the data exposed by DRBD changes to the SyncSource\'s version of the data instantaneously\&. USE THIS OPTION ONLY IF YOU KNOW WHAT YOU ARE DOING\&.
.RE
.PP
\fB\-d\fR, \fB\-\-data\-integrity\-alg \fR\fIhash_alg\fR
.RS 4
DRBD can ensure the data integrity of the user\'s data on the network by comparing hash values\&. Normally this is ensured by the 16 bit checksums in the headers of TCP/IP packets\&. This option can be set to any of the kernel\'s data digest algorithms\&. In a typical kernel configuration you should have at least one of
\fBmd5\fR,
\fBsha1\fR, and
\fBcrc32c\fR
available\&. By default this is not enabled\&.
.sp
See also the notes on data integrity on the drbd\&.conf manpage\&.
.RE
.PP
\fB\-o\fR, \fB\-\-no\-tcp\-cork \fR
.RS 4
DRBD usually uses the TCP socket option TCP_CORK to hint to the network stack when it can expect more data, and when it should flush out what it has in its send queue\&. There is at least one network stack that performs worse when one uses this hinting method\&. Therefore we introduced this option, which disable the setting and clearing of the TCP_CORK socket option by DRBD\&.
.RE
.PP
\fB\-p\fR, \fB\-\-ping\-timeout \fR\fIping_timeout\fR
.RS 4
The time the peer has to answer to a keep\-alive packet\&. In case the peer\'s reply is not received within this time period, it is considered dead\&. The default unit is tenths of a second, the default value is 5 (for half a second)\&.
.RE
.PP
\fB\-D\fR, \fB\-\-discard\-my\-data \fR
.RS 4
Use this option to manually recover from a split\-brain situation\&. In case you do not have any automatic after\-split\-brain policies selected, the nodes refuse to connect\&. By passing this option you make this node a sync target immediately after successful connect\&.
.RE
.PP
\fB\-n\fR, \fB\-\-dry\-run \fR
.RS 4
Causes DRBD to abort the connection process after the resync handshake, i\&.e\&. no resync gets performed\&. You can find out which resync DRBD would perform by looking at the kernel\'s log file\&.
.RE
.PP
\fB\-g\fR, \fB\-\-on\-congestion \fR\fIcongestion_policy\fR, \fB\-f\fR, \fB\-\-congestion\-fill \fR\fIfill_threshold\fR, \fB\-h\fR, \fB\-\-congestion\-extents \fR\fIactive_extents_threshold\fR
.RS 4
By default DRBD blocks when the available TCP send queue becomes full\&. That means it will slow down the application that generates the write requests that cause DRBD to send more data down that TCP connection\&.
.sp
When DRBD is deployed with DRBD\-proxy it might be more desirable that DRBD goes into AHEAD/BEHIND mode shortly before the send queue becomes full\&. In AHEAD/BEHIND mode DRBD does no longer replicate data, but still keeps the connection open\&.
.sp
The advantage of the AHEAD/BEHIND mode is that the application is not slowed down, even if DRBD\-proxy\'s buffer is not sufficient to buffer all write requests\&. The downside is that the peer node falls behind, and that a resync will be necessary to bring it back into sync\&. During that resync the peer node will have an inconsistent disk\&.
.sp
Available
\fIcongestion_policy\fRs are
\fBblock\fR
and
\fBpull\-ahead\fR\&. The default is
\fBblock\fR\&.
\fIFill_threshold\fR
might be in the range of 0 to 10GiBytes\&. The default is 0 which disables the check\&.
\fIActive_extents_threshold\fR
has the same limits as
\fBal\-extents\fR\&.
.sp
The AHEAD/BEHIND mode and its settings are available since DRBD 8\&.3\&.10\&.
.RE
.SS "syncer"
.\" drbdsetup: syncer
.PP
Changes the synchronization daemon parameters of
\fIdevice\fR
at runtime\&.
.PP
\fB\-r\fR, \fB\-\-rate \fR\fB\fIrate\fR\fR
.RS 4
To ensure smooth operation of the application on top of DRBD, it is possible to limit the bandwidth that may be used by background synchronization\&. The default is 250 KiB/sec, the default unit is KiB/sec\&.
.RE
.PP
\fB\-a\fR, \fB\-\-after \fR\fB\fIminor\fR\fR
.RS 4
Start resync on this device only if the device with
\fIminor\fR
is already in connected state\&. Otherwise this device waits in SyncPause state\&.
.RE
.PP
\fB\-e\fR, \fB\-\-al\-extents \fR\fB\fIextents\fR\fR
.RS 4
DRBD automatically performs hot area detection\&. With this parameter you control how big the hot area (=active set) can get\&. Each extent marks 4M of the backing storage\&. In case a primary node leaves the cluster unexpectedly, the areas covered by the active set must be resynced upon rejoining of the failed node\&. The data structure is stored in the meta\-data area, therefore each change of the active set is a write operation to the meta\-data device\&. A higher number of extents gives longer resync times but less updates to the meta\-data\&. The default number of
\fIextents\fR
is 127\&. (Minimum: 7, Maximum: 3843)
.RE
.PP
\fB\-v\fR, \fB\-\-verify\-alg \fR\fB\fIhash\-alg\fR\fR
.RS 4
During online verification (as initiated by the
\fBverify\fR
sub\-command), rather than doing a bit\-wise comparison, DRBD applies a hash function to the contents of every block being verified, and compares that hash with the peer\&. This option defines the hash algorithm being used for that purpose\&. It can be set to any of the kernel\'s data digest algorithms\&. In a typical kernel configuration you should have at least one of
\fBmd5\fR,
\fBsha1\fR, and
\fBcrc32c\fR
available\&. By default this is not enabled; you must set this option explicitly in order to be able to use on\-line device verification\&.
.sp
See also the notes on data integrity on the drbd\&.conf manpage\&.
.RE
.PP
\fB\-c\fR, \fB\-\-cpu\-mask \fR\fB\fIcpu\-mask\fR\fR
.RS 4
Sets the cpu\-affinity\-mask for DRBD\'s kernel threads of this device\&. The default value of
\fIcpu\-mask\fR
is 0, which means that DRBD\'s kernel threads should be spread over all CPUs of the machine\&. This value must be given in hexadecimal notation\&. If it is too big it will be truncated\&.
.RE
.PP
\fB\-C\fR, \fB\-\-csums\-alg \fR\fB\fIhash\-alg\fR\fR
.RS 4
A resync process sends all marked data blocks form the source to the destination node, as long as no
\fBcsums\-alg\fR
is given\&. When one is specified the resync process exchanges hash values of all marked blocks first, and sends only those data blocks over, that have different hash values\&.
.sp
This setting is useful for DRBD setups with low bandwidth links\&. During the restart of a crashed primary node, all blocks covered by the activity log are marked for resync\&. But a large part of those will actually be still in sync, therefore using
\fBcsums\-alg\fR
will lower the required bandwidth in exchange for CPU cycles\&.
.RE
.PP
\fB\-R\fR, \fB\-\-use\-rle\fR
.RS 4
During resync\-handshake, the dirty\-bitmaps of the nodes are exchanged and merged (using bit\-or), so the nodes will have the same understanding of which blocks are dirty\&. On large devices, the fine grained dirty\-bitmap can become large as well, and the bitmap exchange can take quite some time on low\-bandwidth links\&.
.sp
Because the bitmap typically contains compact areas where all bits are unset (clean) or set (dirty), a simple run\-length encoding scheme can considerably reduce the network traffic necessary for the bitmap exchange\&.
.sp
For backward compatibilty reasons, and because on fast links this possibly does not improve transfer time but consumes cpu cycles, this defaults to off\&.
.sp
Introduced in 8\&.3\&.2\&.
.RE
.PP
\fB\-p\fR, \fB\-\-c\-plan\-ahead \fR\fB\fIplan_time\fR\fR, \fB\-s\fR, \fB\-\-c\-fill\-target \fR\fB\fIfill_target\fR\fR, \fB\-d\fR, \fB\-\-c\-delay\-target \fR\fB\fIdelay_target\fR\fR, \fB\-M\fR, \fB\-\-c\-max\-rate \fR\fB\fImax_rate\fR\fR
.RS 4
The dynamic resync speed controller gets enabled with setting
\fIplan_time\fR
to a positive value\&. It aims to fill the buffers along the data path with either a constant amount of data
\fIfill_target\fR, or aims to have a constant delay time of
\fIdelay_target\fR
along the path\&. The controller has an upper bound of
\fImax_rate\fR\&.
.sp
By
\fIplan_time\fR
the agility of the controller is configured\&. Higher values yield for slower/lower responses of the controller to deviation from the target value\&. It should be at least 5 times RTT\&. For regular data paths a
\fIfill_target\fR
in the area of 4k to 100k is appropriate\&. For a setup that contains drbd\-proxy it is advisable to use
\fIdelay_target\fR
instead\&. Only when
\fIfill_target\fR
is set to 0 the controller will use
\fIdelay_target\fR\&. 5 times RTT is a reasonable starting value\&.
\fIMax_rate\fR
should be set to the bandwidth available between the DRBD\-hosts and the machines hosting DRBD\-proxy, or to the available disk\-bandwidth\&.
.sp
The default value of
\fIplan_time\fR
is 0, the default unit is 0\&.1 seconds\&.
\fIFill_target\fR
has 0 and sectors as default unit\&.
\fIDelay_target\fR
has 1 (100ms) and 0\&.1 as default unit\&.
\fIMax_rate\fR
has 10240 (100MiB/s) and KiB/s as default unit\&.
.RE
.PP
\fB\-m\fR, \fB\-\-c\-min\-rate \fR\fB\fImin_rate\fR\fR
.RS 4
We track the disk IO rate caused by the resync, so we can detect non\-resync IO on the lower level device\&. If the lower level device seems to be busy, and the current resync rate is above
\fImin_rate\fR, we throttle the resync\&.
.sp
The default value of
\fImin_rate\fR
is 4M, the default unit is k\&. If you want to not throttle at all, set it to zero, if you want to throttle always, set it to one\&.
.RE
.PP
\fB\-n\fR, \fB\-\-on\-no\-data\-accessible \fR\fB\fIond\-policy\fR\fR
.RS 4
This setting controls what happens to IO requests on a degraded, disk less node (I\&.e\&. no data store is reachable)\&. The available policies are
\fBio\-error\fR
and
\fBsuspend\-io\fR\&.
.sp
If
\fIond\-policy\fR
is set to
\fBsuspend\-io\fR
you can either resume IO by attaching/connecting the last lost data storage, or by the
\fBdrbdadm resume\-io \fR\fB\fIres\fR\fR
command\&. The latter will result in IO errors of course\&.
.sp
The default is
\fBio\-error\fR\&. This setting is available since DRBD 8\&.3\&.9\&.
.RE
.SS "primary"
.\" drbdsetup: primary
.PP
Sets the
\fIdevice\fR
into primary role\&. This means that applications (e\&.g\&. a file system) may open the
\fIdevice\fR
for read and write access\&. Data written to the
\fIdevice\fR
in primary role are mirrored to the device in secondary role\&.
.PP
Normally it is not possible to set both devices of a connected DRBD device pair to primary role\&. By using the
\fB\-\-allow\-two\-primaries\fR
option, you override this behavior and instruct DRBD to allow two primaries\&.
.PP
\fB\-o\fR, \fB\-\-overwrite\-data\-of\-peer\fR
.RS 4
Alias for \-\-force\&.
.RE
.PP
\fB\-f\fR, \fB\-\-force\fR
.RS 4
Becoming primary fails if the local replica is not up\-to\-date\&. I\&.e\&. when it is inconsistent, outdated of consistent\&. By using this option you can force it into primary role anyway\&. USE THIS OPTION ONLY IF YOU KNOW WHAT YOU ARE DOING\&.
.RE
.SS "secondary"
.\" drbdsetup: secondary
.PP
Brings the
\fIdevice\fR
into secondary role\&. This operation fails as long as at least one application (or file system) has opened the device\&.
.PP
It is possible that both devices of a connected DRBD device pair are secondary\&.
.SS "verify"
.\" drbdsetup: verify
.PP
This initiates on\-line device verification\&. During on\-line verification, the contents of every block on the local node are compared to those on the peer node\&. Device verification progress can be monitored via
/proc/drbd\&. Any blocks whose content differs from that of the corresponding block on the peer node will be marked out\-of\-sync in DRBD\'s on\-disk bitmap; they are
\fInot\fR
brought back in sync automatically\&. To do that, simply disconnect and reconnect the resource\&.
.PP
If on\-line verification is already in progress (and this node is "VerifyS"), this command silently "succeeds"\&. In this case, any start\-sector (see below) will be ignored, and any stop\-sector (see below) will be honored\&. This can be used to stop a running verify, or to update/shorten/extend the coverage of the currently running verify\&.
.PP
This command will fail if the
\fIdevice\fR
is not part of a connected device pair\&.
.PP
See also the notes on data integrity on the drbd\&.conf manpage\&.
.PP
\fB\-s\fR, \fB\-\-start \fR\fB\fIstart\-sector\fR\fR
.RS 4
Since version 8\&.3\&.2, on\-line verification should resume from the last position after connection loss\&. It may also be started from an arbitrary position by setting this option\&. If you had reached some stop\-sector before, and you do not specify an explicit start\-sector, verify should resume from the previous stop\-sector\&.
.sp
Default unit is sectors\&. You may also specify a unit explicitly\&. The
\fBstart\-sector\fR
will be rounded down to a multiple of 8 sectors (4kB)\&.
.RE
.PP
\fB\-S\fR, \fB\-\-stop \fR\fB\fIstop\-sector\fR\fR
.RS 4
Since version 8\&.3\&.14, on\-line verification can be stopped before it reaches end\-of\-device\&. This can be
.sp
Default unit is sectors\&. You may also specify a unit explicitly\&. The
\fBstop\-sector\fR
may be updated by issuing an additional drbdsetup verify command on the same node while the verify is running\&.
.RE
.SS "invalidate"
.\" drbdsetup: invalidate
.PP
This forces the local device of a pair of connected DRBD devices into SyncTarget state, which means that all data blocks of the device are copied over from the peer\&.
.PP
This command will fail if the
\fIdevice\fR
is not either part of a connected device pair, or disconnected Secondary\&.
.SS "invalidate\-remote"
.\" drbdsetup: invalidate-remote
.PP
This forces the local device of a pair of connected DRBD devices into SyncSource state, which means that all data blocks of the device are copied to the peer\&.
.PP
On a disconnected Primary device, this will set all bits in the out of sync bitmap\&. As a side affect this suspends updates to the on disk activity log\&. Updates to the on disk activity log resume automatically when necessary\&.
.SS "wait\-connect"
.\" drbdsetup: wait-connect
.PP
Returns as soon as the
\fIdevice\fR
can communicate with its partner device\&.
.PP
\fB\-t\fR, \fB\-\-wfc\-timeout \fR\fB\fIwfc_timeout\fR\fR, \fB\-d\fR, \fB\-\-degr\-wfc\-timeout \fR\fB\fIdegr_wfc_timeout\fR\fR, \fB\-o\fR, \fB\-\-outdated\-wfc\-timeout \fR\fB\fIoutdated_wfc_timeout\fR\fR, \fB\-w\fR, \fB\-\-wait\-after\-sb\fR
.RS 4
This command will fail if the
\fIdevice\fR
cannot communicate with its partner for
\fItimeout\fR
seconds\&. If the peer was working before this node was rebooted, the
\fIwfc_timeout\fR
is used\&. If the peer was already down before this node was rebooted, the
\fIdegr_wfc_timeout\fR
is used\&. If the peer was sucessfully outdated before this node was rebooted the
\fIoutdated_wfc_timeout\fR
is used\&. The default value for all those timeout values is 0 which means to wait forever\&. In case the connection status goes down to StandAlone because the peer appeared but the devices had a split brain situation, the default for the command is to terminate\&. You can change this behavior with the
\fB\-\-wait\-after\-sb\fR
option\&.
.RE
.SS "wait\-sync"
.\" drbdsetup: wait-sync
.PP
Returns as soon as the
\fIdevice\fR
leaves any synchronization into connected state\&. The options are the same as with the
\fIwait\-connect\fR
command\&.
.SS "disconnect"
.\" drbdsetup: disconnect
.PP
Removes the information set by the
\fBnet\fR
command from the
\fIdevice\fR\&. This means that the
\fIdevice\fR
goes into unconnected state and will no longer listen for incoming connections\&.
.SS "detach"
.\" drbdsetup: detach
.PP
Removes the information set by the
\fBdisk\fR
command from the
\fIdevice\fR\&. This means that the
\fIdevice\fR
is detached from its backing storage device\&.
.PP
\fB\-f\fR, \fB\-\-force\fR
.RS 4
A regular detach returns after the disk state finally reached diskless\&. As a consequence detaching from a frozen backing block device never terminates\&.
.sp
On the other hand A forced detach returns immediately\&. It allows you to detach DRBD from a frozen backing block device\&. Please note that the disk will be marked as failed until all pending IO requests where finished by the backing block device\&.
.RE
.SS "down"
.\" drbdsetup: down
.PP
Removes all configuration information from the
\fIdevice\fR
and forces it back to unconfigured state\&.
.SS "role"
.\" drbdsetup: role
.PP
Shows the current roles of the
\fIdevice\fR
and its peer, as
\fIlocal\fR/\fIpeer\fR\&.
.SS "state"
.\" drbdsetup: state
.PP
Deprecated alias for "role"
.SS "cstate"
.\" drbdsetup: cstate
.PP
Shows the current connection state of the
\fIdevice\fR\&.
.SS "dstate"
.\" drbdsetup: dstate
.PP
Shows the current states of the backing storage devices, as
\fIlocal\fR/\fIpeer\fR\&.
.SS "status"
.\" drbdsetup: status
.PP
Shows the current status of the device in XML\-like format\&. Example output:
.sp
.if n \{\
.RS 4
.\}
.nf
<resource minor="0" name="s0" cs="SyncTarget" st1="Secondary" st2="Secondary"
         ds1="Inconsistent" ds2="UpToDate" resynced_precent="5\&.9" />
.fi
.if n \{\
.RE
.\}
.sp
.SS "resize"
.\" drbdsetup: resize
.PP
This causes DRBD to reexamine the size of the
\fIdevice\fR\'s backing storage device\&. To actually do online growing you need to extend the backing storages on both devices and call the
\fBresize\fR
command on one of your nodes\&.
.PP
The
\fB\-\-assume\-peer\-has\-space\fR
allows you to resize a device which is currently not connected to the peer\&. Use with care, since if you do not resize the peer\'s disk as well, further connect attempts of the two will fail\&.
.PP
When the
\fB\-\-assume\-clean\fR
option is given DRBD will skip the resync of the new storage\&. Only do this if you know that the new storage was initialized to the same content by other means\&.
.SS "check\-resize"
.\" drbdsetup: check-resize
.PP
To enable DRBD to detect offline resizing of backing devices this command may be used to record the current size of backing devices\&. The size is stored in files in /var/lib/drbd/ named drbd\-minor\-??\&.lkbd
.PP
This command is called by
\fBdrbdadm resize \fR\fB\fIres\fR\fR
after
\fBdrbdsetup \fR\fB\fIdevice\fR\fR\fB resize\fR
returned\&.
.SS "pause\-sync"
.\" drbdsetup: pause-sync
.PP
Temporarily suspend an ongoing resynchronization by setting the local pause flag\&. Resync only progresses if neither the local nor the remote pause flag is set\&. It might be desirable to postpone DRBD\'s resynchronization after eventual resynchronization of the backing storage\'s RAID setup\&.
.SS "resume\-sync"
.\" drbdsetup: resume-sync
.PP
Unset the local sync pause flag\&.
.SS "outdate"
.\" drbdsetup: outdate
.PP
Mark the data on the local backing storage as outdated\&. An outdated device refuses to become primary\&. This is used in conjunction with
\fBfencing\fR
and by the peer\'s
\fBfence\-peer\fR
handler\&.
.SS "show\-gi"
.\" drbdsetup: show-gi
.PP
Displays the device\'s data generation identifiers verbosely\&.
.SS "get\-gi"
.\" drbdsetup: get-gi
.PP
Displays the device\'s data generation identifiers\&.
.SS "show"
.\" drbdsetup: show
.PP
Shows all available configuration information of the
\fIdevice\fR\&.
.SS "suspend\-io"
.\" drbdsetup: suspend-io
.PP
This command is of no apparent use and just provided for the sake of completeness\&.
.SS "resume\-io"
.\" drbdsetup: resume-io
.PP
If the fence\-peer handler fails to stonith the peer node, and your
\fBfencing\fR
policy is set to resource\-and\-stonith, you can unfreeze IO operations with this command\&.
.SS "events"
.\" drbdsetup: events
.PP
Displays every state change of DRBD and all calls to helper programs\&. This might be used to get notified of DRBD\'s state changes by piping the output to another program\&.
.PP
\fB\-a\fR, \fB\-\-all\-devices\fR
.RS 4
Display the events of all DRBD minors\&.
.RE
.PP
\fB\-u\fR, \fB\-\-unfiltered\fR
.RS 4
This is a debugging aid that displays the content of all received netlink messages\&.
.RE
.SS "new\-current\-uuid"
.\" drbdsetup: new-current-uuid
.PP
Generates a new current UUID and rotates all other UUID values\&. This has at least two use cases, namely to skip the initial sync, and to reduce network bandwidth when starting in a single node configuration and then later (re\-)integrating a remote site\&.
.PP
Available option:
.PP
\fB\-c\fR, \fB\-\-clear\-bitmap\fR
.RS 4
Clears the sync bitmap in addition to generating a new current UUID\&.
.RE
.PP
This can be used to skip the initial sync, if you want to start from scratch\&. This use\-case does only work on "Just Created" meta data\&. Necessary steps:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
On
\fIboth\fR
nodes, initialize meta data and configure the device\&.
.sp
\fBdrbdadm \-\- \-\-force create\-md \fR\fB\fIres\fR\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
They need to do the initial handshake, so they know their sizes\&.
.sp
\fBdrbdadm up \fR\fB\fIres\fR\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
They are now Connected Secondary/Secondary Inconsistent/Inconsistent\&. Generate a new current\-uuid and clear the dirty bitmap\&.
.sp
\fBdrbdadm \-\- \-\-clear\-bitmap new\-current\-uuid \fR\fB\fIres\fR\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
They are now Connected Secondary/Secondary UpToDate/UpToDate\&. Make one side primary and create a file system\&.
.sp
\fBdrbdadm primary \fR\fB\fIres\fR\fR
.sp
\fBmkfs \-t \fR\fB\fIfs\-type\fR\fR\fB $(drbdadm sh\-dev \fR\fB\fIres\fR\fR\fB)\fR
.RE
.sp
.RE
.PP
One obvious side\-effect is that the replica is full of old garbage (unless you made them identical using other means), so any online\-verify is expected to find any number of out\-of\-sync blocks\&.
.PP
\fIYou must not use this on pre\-existing data!\fR
Even though it may appear to work at first glance, once you switch to the other node, your data is toast, as it never got replicated\&. So
\fIdo not leave out the mkfs\fR
(or equivalent)\&.
.PP
This can also be used to shorten the initial resync of a cluster where the second node is added after the first node is gone into production, by means of disk shipping\&. This use\-case works on disconnected devices only, the device may be in primary or secondary role\&.
.PP
The necessary steps on the current active server are:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
\fBdrbdsetup \fR\fB\fIdevice\fR\fR\fB new\-current\-uuid \-\-clear\-bitmap\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Take the copy of the current active server\&. E\&.g\&. by pulling a disk out of the RAID1 controller, or by copying with dd\&. You need to copy the actual data, and the meta data\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
\fBdrbdsetup \fR\fB\fIdevice\fR\fR\fB new\-current\-uuid\fR
.RE
.sp
.RE
Now add the disk to the new secondary node, and join it to the cluster\&. You will get a resync of that parts that were changed since the first call to
\fBdrbdsetup\fR
in step 1\&.
.SH "EXAMPLES"
.PP
For examples, please have a look at the
\m[blue]\fBDRBD User\'s Guide\fR\m[]\&\s-2\u[1]\d\s+2\&.
.SH "VERSION"
.sp
This document was revised for version 8\&.3\&.2 of the DRBD distribution\&.
.SH "AUTHOR"
.sp
Written by Philipp Reisner philipp\&.reisner@linbit\&.com and Lars Ellenberg lars\&.ellenberg@linbit\&.com
.SH "REPORTING BUGS"
.sp
Report bugs to drbd\-user@lists\&.linbit\&.com\&.
.SH "COPYRIGHT"
.sp
Copyright 2001\-2008 LINBIT Information Technologies, Philipp Reisner, Lars Ellenberg\&. This is free software; see the source for copying conditions\&. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&.
.SH "SEE ALSO"
.PP
\fBdrbd.conf\fR(5),
\fBdrbd\fR(8),
\fBdrbddisk\fR(8),
\fBdrbdadm\fR(8),
\m[blue]\fBDRBD User\'s Guide\fR\m[]\&\s-2\u[1]\d\s+2,
\m[blue]\fBDRBD web site\fR\m[]\&\s-2\u[2]\d\s+2
.SH "NOTES"
.IP " 1." 4
DRBD User's Guide
.RS 4
\%http://www.drbd.org/users-guide/
.RE
.IP " 2." 4
DRBD web site
.RS 4
\%http://www.drbd.org/
.RE
